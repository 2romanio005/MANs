Симуляция репозитория
	https://learngitbranching.js.org/?locale=ru_RU

шпаргалка Markdown gitHab
	https://gist.github.com/fomvasss/8dd8cd7f88c67a4e3727f9d39224a84c
	цвет
		ищи MathJaX
		https://stackoverflow.com/questions/11509830/how-to-add-color-to-githubs-readme-md-file
	таб
		&emsp;&emsp;

часто
	-n or --dry-run									посмотреть что произойдёт после выполнения команды, не выполняя её
	-v												увеличиват информацию (вариативность)


// ================================================================== РАЗДИЧНЫЕ НАСТРОЙКИ И ПЛЮШКИ ==============================================================

gitk --all &										анализ всех изменений git в отдельной программе
tig													анализ всех изменений git в отдельной программе
reflog												локальная история всех действий

.gitignore											игнорирование индексирования некоторых файлов
	man gitignor											мануал по gitignor на линукс
	name.*													любой файл или каталог имя которого начинается с name.
	/name													каталогг или файл в корне - не подкаталоги
	name/													только каталоги
	*														не может быть касой чертой
	
.githooks 											всякие проверки форматов и кода
	https://git-scm.com/book/ru/v2/Настройка-Git-Хуки-в-Git

git flow											это в файле GIT FLOW man

config												настройки
	-e 														открыть в редакторе
	-l														вывести список
	--global --system --local 								пространства распространения
	--global core.quotePath false							русские имена
	alias.сокрощенное имя команды "код aliasa"				alias
	alias.cm "commit"


// ======================================================= РАБОТА С ФАЙЛАМИ и И ИНДЕКСАМИ ==============================================================

ls-files											вывести список всех отслеживаемых файлов

status												получить статус файлов
	-s														короткий вывод

add {имя файла}										добавить файл в индексированные
	-init													интерактивный режим
	
restore {имя файла}									отменить изменения в файле
	--staged												удалить из add




mv {имя файла}{новое имя\путь}						переместить или переименовать файл	
rm  {имя файла}										удалить файл
	-f														удалить даже если add 
	--cached												перестьть отслеживать файл (удалить из add)
clean 												очистка неотслеживамых файлов
	-i														отдельно спрашивает про каждый файл
	-d														дириктории тоже удаляем
	-f														принуд очистка


// ======================================================= РАБОТА С КОММИТАМИ ==============================================================

log													история комитов
	-число													только последние число коммитов
	--all													показать все ветки а не только текущую
	--patch													вывести изменения (diff)
	-stat 													общая инфа
	--pretty=oneline(short, full, fuller)					меняет формат вывода
	--graph													рисует веточки
	--grep													искать определённую строку
	-S

log master..tmp										выведет коммиты, которые есть в tmp, но нет в master там много интересных вариантов

diff												посмотреть различия между локальными и индексированными файлами
	--staged												посмотреть различия между локальными и закоммичеными файлами
	--name-only HEAD HEAD~1									посмотреть какие файл были изменены за последний коммит

commit 												создание коммита
	-m "комент"												чтобы не открывать отдельный файл описания 
	-a 														add все файлы
	-am 													-a + -m 
	-v 														в описание будет добавленн diff
	--amend													объеденить с последним коммитом

tag													создать тег
	-a название тега										аннотированный 									
	-m коменарий к тегу										коментарий
	-d название тега										удалить тег
tag v1.0.0
	
reset 												откатывает локальный коммит 
	reset --soft HEAD~										удалить коммит но оставить изменения
revert												создаёт коммит отменябщий предыдущий
	
	
// ======================================================= РАБОТА С ВЕТКАМИ ==============================================================

show [хеш]											посмотреть определённый коммит
show [хеш]~n										посмотреть родителя (n-1_-ого родителя коммит
										
checkout название коммита							перейти к определённому коммиту
	-b														создать ветку
	-v														не помню что
	
switch												переместиться между ветками
	-c имя ветки											создать новую ветку

branch												посмотреть список веток
	{имя новой ветки}										создать новую ветку																	
	-d {имя удаляемой ветки}								удалить ветку 										

remote prune origin --dry-run						показать какие удалённые ветки с ур будут удалены с лр

merge {имя ветки которую мы мерджим в текущую}		мердж
										
rebase {имя того кто новый родитель коммита}		изменить родителя
	master tmp 												ребейз tmp к master

rev-parse {имя комита}								вывести хеш коммита

stash												сохранить изменения в стеш (новые файлы сначала add в индекс)
	apply													выташить из стеша без удаления из него
	list													показать содежимое стеша
	drop {имя удаляемого стеша}								удалить стеш все из стеша
	pop														выташить из стеша и удалить из него
	show -p													показать содеждимое файлов стеша

// ======================================================= РАБОТА С УДАЛЁННЫМИ И ЛОКАЛЬНЫМИ РЕПОЗИТОРИЯМИ ==============================================================

https://habr.com/ru/articles/273897/				создание репозиториев git и github
https://stackoverflow.com/questions/21160774/github-error-key-already-in-use		// настройка двух выбора разных ssh ключей для разных аккаунтов githab
	github-MyEducation11235							по умолчанию
	github-2romanio005
	github-personal:<gh_username>/<gh_reponame>.git 
	вместо git@github.com:<gh_username>/<gh_reponame>.git


ssh-keygen											и на windows и на linux

init												создать лр
clone {откуда} {куда}								подгрузить в лр из ур 

origin 												переменная с именем адресса ур

remote												настройка взаимодействия с ур
	prune origin											удалить устаревшие ветки с origin уд
		 --dry-run													токазать какие ветки будут удалены
	-v														показывает подключённые удалённые репозитории
	add														добавить ур
	remove													удалить ур
	show origin												показывает данные о origin

push имя репозитория и ветка						запушить все коммиты на ур							
	--tags													отправляе ешё и все теги
	--delete название тега									удалить тег из ур
	--force													перезаписывает ветку ур на ветку лр 

pull												мёрджит в локальный с удалённого

fetch												загружает файлы с ур

