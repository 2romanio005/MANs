// ======================================================== SELECT ======================================================

SELECT column_name1, column_name2 FROM table_name

SELECT DISTINCT - убрать дублирующиеся строки из ответа

value AS tmp_column_name	- добавить временную колонку для этого запроса



// ========================================================= ОБЪЕДИНЕНИЯ ====================================================

table A JOIN tableB ON cond 				- объединеине как при FROM из нескольких таблиц и усливии
		В результате получается одна таблица, где равные по условию строки суммируются в одну двойную строку

LEFT OUTER JOIN		- дополняются записями из первой по порядку (левой) таблицы, даже если они не соответствуют условию
RIGHT OUTER JOIN	- дополняются записями из второй по порядку (правой) таблицы, даже если они не соответствуют условию
FULL OUTER JOIN		- дополняются записями из первой (левой) и второй (правой) таблиц, даже если они не соответствуют условию
значение столбцов из другой таблицы будет NULL



// ================================================================ УСЛОВИЯ =========================================================

WHERE column_name1<30 - условие
AND OR
BETWEEN left AND right	- все в отрезке [left, right]
LIKE "regular_exp" - все что подходят под регулярное выражени
	%	- любая последовательность символов
	_	- лдин любой символ

EXISTS(subReq)	- возвращает true, если подзапрос возвращает одну, или более записей, в противном случае, возвращает false

// конструкция CASE
SELECT ProductName, ProductCount,
CASE
    WHEN ProductCount = 1
        THEN 'Товар заканчивается'
    WHEN ProductCount = 2
        THEN 'Мало товара'
    ELSE 'Много товара'
END AS Category

// ========================================================= СОРТИРОВКА И ОБЪЕДИНЕНИЯ =======================================================

ORDER BY column_name1 - отсортировать по увеличению значений колонки1
ORDER BY column_name1 DESC - отсортировать по уменьшению значений колонки1

UNION	- совмещает вывод двух SELECT (количество колонок и тыпы должны совпадать)
UNION ALL	- не убирает дублирующие строки из UNION
INTERSECT	- комбинирует два запроса SELECT, но возвращает записи только первого SELECT, которые имеют совпадения во втором элементе SELECT
EXCEPT		- комбинирует два запроса SELECT, но возвращает записи только первого SELECT, которые не имеют совпадения во втором элементе SELECT



// ============================================================ АГРЕГАТНЫЕ ФУНКЦИИ ====================================================

COUNT – возвращает количество значений в заданном столбце;
SUM – возвращает сумму значений в заданном столбце;
AVG – возвращает усредненное значение в заданном столбце;
MIN – возвращает минимальное значение в заданном столбце;
MAX – возвращает максимальное значение в заданном столбце.

count(DISTINCT id) - чтобы исключить дубликаты

GROUP BY column_name1 - Группировка разделяет все данные на логические наборы, что даёт возможность выполнять статистические вычисления (COUNT...) отдельно в каждой группе. 

HAVING cond - вместо WHERE для group by