========================================================================================================================================================================
================================================================================ ОСНОВА ================================================================================

<style>
	@import url(путь);
</style>

#MMM{
	стили для id="MMM"
}
#MMM a{
	стили внутренних <a> у объекта id="MMM"
}

*{
	стили для всех объектов
}

::after {		- псевдо элемент
	content: 'обязательное содержимое';
}
https://www.sitepoint.com/css-selectors/


@media <условие> {
	стили которые задействовать при выполнении условия
}
@media (prefers-color-scheme: dark) {
        --red-600: #{$моя пепременная scss};
}
https://skillbox.ru/media/code/mediazaprosy-v-css-kak-nastroit-adaptivnuyu-vyerstku-sayta/


========================================================================================================================================================================
=========================================================================== ПОЗИЦИОНИРОВАНИЕ ===========================================================================

padding: верх право низ лево	- внутренний отступ
margin: верх+низ право+лево		- внешний отступ
удалению ненужного пространства между родителем и элементом путём добавления отрицательного внешнего отступа к родительскому элементу https://habr.com/ru/companies/ruvds/articles/499120/

position: static 	- значение по умолчанию, элемент позиционируется в соответствии с его местом в потоке документа;
position: relative 	- элемент позиционируется относительно своего исходного положения в потоке документа;
position: absolute 	- элемент позиционируется относительно ближайшего родительского элемента, который имеет позиционирование, отличное от static;
position: fixed 	- элемент позиционируется относительно окна браузера;
position: sticky 	- элемент остаётся на месте при прокрутке страницы, но при этом может быть отодвинут от своей стандартной позиции мышкой.
https://htmlacademy.ru/blog/css/position

display: none;  	- элемент как будто не существует (ни отступов ни вида)
display: block; 	- блочный элемент  
display: inline;	- строчный элемент (могут размещатьься в строку)
display: inline-block; - блочный элемент с возможностью обтекания
https://learn.javascript.ru/display
|
display: flex;		- все дочернии элементы будут выравниваться с помощью 3 нижних(всё задаются в родительском элементе)
justify-content 		- управляет выравниванием элементов по главной оси.
align-items				- управляет выравниванием элементов по перекрёстной оси.
align-self 				- управляет выравниванием конкретного flex элемента по перекрёстной оси
flex-wrap: wrap/nowrap	- включает отключает перенос блоков при недостатке места
https://habr.com/ru/articles/467049/
https://developer.mozilla.org/ru/docs/Web/CSS/CSS_flexible_box_layout/Aligning_items_in_a_flex_container
|
display: grid 		- что то мощное про рзамешение
https://habr.com/ru/companies/macloud/articles/564182/

box-align: center 	- выравнивание по центру для не текстовых элементов

float: left; разрешить обтекание слева

z-index: 1 - на передний плна


========================================================================================================================================================================
================================================================================ ТЕКСТ ===============================================================================

text-decoration: none;

text-align: center - текс по центру
text-align: justify; - выравневание теккста по ширине блока (как в word)
white-space: nowrap; - запретить перенос по словам
word-wrap: break-word; - разрешить перенос текста

text-shadow: 6px, 4px, 2px, rgba(0, 0, 0, 2) - размытие текст вниз на 6, вправо на 4, размытие 1, черным цветом с непрозрачность 20%

writing-mode: vertical-rl;	- вертикальный текст

========================================================================================================================================================================
================================================================================ КРАСОТА ===============================================================================

all: unset;				- убрать все стили по умолчанию
text-decoration: none;


border-radius: 10px; - скргление краёв
border: 1px solid red - рамка шириной 1 красного цвета 
	solod - непрерывная рамка
	dotted - пунктирная рамка
box-sizing: content-box		граница по содержимому (рамка прибовляется снаружи)
			border-box;		граница по рамке (рамка внутри)


pointer-events: none;	- убрать нажатия (будут нажиматься элементы под этим)
pointer-events: auto;	- включить нажатия 


========================================================================================================================================================================
=========================================================================== АНИМАЦИОНИРОВАНИЕ ==========================================================================

transform: rotate(90deg);	- вращение вокруг точки transform-origin которая по умолчанию в центре (можно задавать и отрицательные значения)
transform-origin: 0 0;		- теперь точка вращения = левый верхний угол

transform: rotateY(180deg);	- вращение вокруг оси Y

transform: translateX(50%);	- смещение элемента по оси X 

backface-visibility: hidden;- указывает не показывать заднюю сторону элемента (по умолчанию, при повороте, она бы отображалась зеркально)



@keyframes nameAnimation{
	0%{
		margin-left: 0px;
	}
	50%{
		margin-left: 300px;
	}
	...
}

animation: nameAnimation time liner count;
	nameAnimation		- анимация
	time	- время анимации 
	liner	- функция анимации (например cubic-bezier https://cubic-bezier.com/#.13,.72,.82,1.21 )
	count	- количество раз проигрывания анимации   
https://developer.mozilla.org/ru/docs/Web/CSS/CSS_animations/Using_CSS_animations



transition: all time liner 0s;
	all		- список свойств которые дожны анимироваться
	time	- время анимации 
	liner	- функция анимации (например cubic-bezier https://cubic-bezier.com/#.13,.72,.82,1.21 )
	0s		- время до начала анимации







			
			
			
========================================================================================================================================================================
=========================================================================== МАКЕТЫ ВЁРСТКИ =============================================================================

<div id="conteiner">					- div шаблон
	<div id="head">
		<h1>заголовок</h1>
	</div>
	<div id="main">
		<div id="content">
			<p>контент</p>
		</div>
		<div id="info">
			<p>информация</p>
		</div>
	</div>
	<div id="navigation">
		<p>нивигация</p>
	</div>
	<div id="footer">
		<p>подвал</p>
	</div>
</div>

<header>								- HTML5 шаблон
	<h1>заголовок</h1>
</header>
<main>
	<div id="content">
		<p>контент</p>
	</div>
	<aside>
		<p>информация</p>
	</aside>>
</main>>
<nav>
	<p>нивигация</p>
</nav>>
<footer>
	<p>подвал</p>
</footer>>







