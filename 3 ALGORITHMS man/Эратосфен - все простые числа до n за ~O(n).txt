Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:

1) Выписать подряд все целые числа от двух до n (2, 3, 4, …, n).
2) Пусть переменная p изначально равна двум — первому простому числу.
3) Зачеркнуть в списке числа от 2p до n считая шагами по p (это будут числа кратные p: 2p, 3p, 4p, …).
4) Найти первое незачёркнутое число в списке, большее чем p, и присвоить значению переменной p это число.
5) Повторять шаги 3 и 4, пока возможно.

Теперь все незачёркнутые числа в списке — это все простые числа от 2 до n.

На практике, алгоритм можно улучшить следующим образом. На шаге № 3 числа можно зачеркивать начиная сразу с числа p2,
потому что все меньшие числа, кратные p, обязательно имеют простой делитель меньше p, а они уже зачеркнуты к этому времени.
И, соответственно, останавливать алгоритм можно, когда p2 станет больше, чем n.


bool* arr = new bool[n]{1, 1, 1, };
for (long long i = 2; i < n; i++)
{
	if (!arr[i]) continue;

	cout << i << ' ';

	for (long long j = i * i; j < fin; j += i)
	{
		arr[j] = false;
	}
}

