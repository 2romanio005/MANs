




====================================================== ОПТИМИЗАЦИИ КОМПИЛЯТОРА =============================================

volatile								- модификатор типа, который говорит компилятору не оптимизировать эту переменную
https://habr.com/ru/articles/673428/

noexcept								- модификатор функции, означает, что она не быдет выкидывать исключений, что полезно для оптимизации компилятором. Но это никак не запрещает нам получить исключения, но после них прграмма сразу вылетит без возможности отловить.
https://ru.stackoverflow.com/questions/812038/Как-работает-noexcept-в-c





====================================================== НАСТРОЙКА ПРОВЕРКИ ПРАВИЛЬНОСТИ КОДА ПРИ КОМПИЛЯЦИИ ============================

mutable 								- модификатор типа поля класса, разрешающий редактирование поля в const методах
https://habr.com/ru/companies/infopulse/articles/341264/

explicit								- модифиатор метода запрещающий неявное преобразование типов при его вызове. Для конструктора убирает вызов через {}. Для оператора преобразования типа отключает его неявную форму.
https://habr.com/ru/articles/436296/

assert(I)								- проверка условия I во время рабоыт программы и exit() если оно false. Должно отсутсвтвовать в релизе
static_assert(I, M)						- проверка условия I при компиляции и вывод сообщения M
https://ravesli.com/urok-109-assert-i-static_assert/





====================================================== ПРОДВИНУТАЯ РАБОТА С ПАМЯТЬЮ =========================================

lvalue									- (левое значени) объект, который занимает идентифицируемое место в памяти (например, имеет адрес). Ему можно присваивать зачения.
rvalue									- (правое значение) всё, что не lvalue, то у чего нельзя получить адреса, а хранится оно в каком-нбудь регистре или стеке. Это обекты без названий (те что мы hard кодим или которые возвращаются из функций). Значение присваивать в них нельзя
https://habr.com/ru/articles/348198/

std::move(A)							- преобразование А к rvalue типу для последующего вызова конптруктора перемещения
https://habr.com/ru/articles/587644/

const int &a							- ссылка на константное lavlue, может пинимать и rvalue, т.к. переменная не будет изменяться.			использовать для констрторов копирования
int &&a									- ссылка на ссылку (ссылка на rvalue).   																использовать для конструкторов перемещения
https://ru.stackoverflow.com/questions/512284/Что-значит-двойной-амперсанд-в-параметрах-функции-и-как-его-использовать

realloc 								- (С) перевыделение памяти, если возможно то в этом же месте










valgrind и Sanitizers программы для отслеживания утечек памяти
https://habr.com/ru/companies/otus/articles/801123/